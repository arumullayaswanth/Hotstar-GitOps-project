pipeline {
    agent any

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/arumullayaswanth/Microservices-E-Commerce-eks-project.git'
            }
        }
        stage("Docker Image Build") {
            steps {
                script {
                    dir('../') {  // Go up one level from jenkinsfiles/
                        echo "üîç Confirming Dockerfile exists:"
                        sh 'pwd && ls -l Dockerfile'
        
                        echo "üê≥ Building Docker image from root"
                        sh 'docker system prune -f'
                        sh 'docker build -t hotstar .'
                    }
                }
            }
        }    

        stage("ECR Image Pushing") {
            steps {
                script {
                    sh '''
                    echo "üîê Logging into ECR..."
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 421954350274.dkr.ecr.us-east-1.amazonaws.com

                    echo "üè∑Ô∏è Tagging image..."
                    docker tag hotstar:latest 421954350274.dkr.ecr.us-east-1.amazonaws.com/hotstar:${BUILD_NUMBER}

                    echo "üì§ Pushing image to ECR..."
                    docker push 421954350274.dkr.ecr.us-east-1.amazonaws.com/hotstar:${BUILD_NUMBER}
                    '''
                }
            }
        }

        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "Hotstar-GitOps-project"
                GIT_EMAIL = "Yaswanth.arumulla@gmail.com"
                GIT_USER_NAME = "arumullayaswanth"
                IMAGE_NAME = "hotstar"
                REPO_URL = "421954350274.dkr.ecr.us-east-1.amazonaws.com/hotstar"
                YAML_FILE = "deployment.yml.yaml"
            }

            steps {
                dir('kubernetes-files') {
                    withCredentials([string(credentialsId: 'my-git-pattoken', variable: 'git_token')]) {
                        sh '''
                        echo "üõ†Ô∏è Updating deployment file with new image tag..."

                        git config user.email "${GIT_EMAIL}"
                        git config user.name "${GIT_USER_NAME}"

                        sed -i "s#image:.*#image: ${REPO_URL}:${BUILD_NUMBER}#g" ${YAML_FILE}

                        git add .
                        git commit -m "Update ${IMAGE_NAME} Image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                        git push https://${git_token}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                        '''
                    }
                }
            }
        }
    }
}
